/**
 * Created by юля on 17.11.2014.
 */

(function(){
    var app = angular.module('myApp', ['ngResource', 'user', 'ngRoute', 'apytanka', 'customDirectives', 'templates']);

    // for compatibility with Rails CSRF protection

    app.config(['$httpProvider', function($httpProvider){
        $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')
    }
    ]);

    app.config(['$routeProvider', '$locationProvider',
        function($routeProvider, $locationProvider) {

            $routeProvider.
                    when('/', {
                        templateUrl: 'ng/templates/home.html',
                        controller: 'appCtrl'
//                        resolve: {
//                            user_data: function (userService, currentUserApi, $q) {
//                                currentUserApi.get().$promise.then(
//                                  function(data){
//                                      return userService.setUser(data.user);
//                                  }
//                                );
//                            }
//                        }
                    }).
                    when('/account_activations/:id/edit?email=:email', {
                        resolve: {
                            user_data: function($resource, $route, $routeParams, userService){
                                var AccountActivation = $resource($route.url);
                                return AccountActivation.save({id: $route.current.params.id, email: $route.current.params.email}).$promise.then(function(data){
                                    userService.setUser(data.user);
                                });
                            }
                        },
                        redirectTo: function(userService){
                            return '/profile/' + userService.getUser().id + '/edit/about'
                        }
                    }).
                    when('/profile/:id?:params', {
                        templateUrl: 'ng/templates/profile.html',
                        controller: 'chosenUserProfile',
                        reloadOnSearch: false
                    }).
                    when('/profile/:id', {
                        redirectTo: '/profile/:id?search=""'
                    }).
                    when('/profile/:id/edit', {
                        redirectTo: '/profile/:id/edit/about'
                    }).
                    when('/profile/:id/edit/about', {
                        templateUrl: 'ng/templates/profile-edit.html',
                        action: 'profile.about',
                        controller: 'profileCtrl',
                        resolve: {
                            user_data: function(userApi, $route){
                                return userApi.get({id: $route.current.params.id, action: 'edit'}).$promise.then(function(data){
                                    return data.full_user
                                });
                            }
                        }
                    }).
                    when('/profile/:id/edit/apytanki?:params', {
                        templateUrl: 'ng/templates/profile-edit.html',
                        action: 'profile.apytanki',
                        reloadOnSearch: false
                    }).
                    when('/profile/:id/edit/apytanki', {
                        redirectTo: '/profile/:id/edit/apytanki?search=""'
                    }).
                    when('/profile/:id/edit/settings', {
                        templateUrl: 'ng/templates/profile-edit.html',
                        action: 'profile.settings'
                    }).
                    when('/apytanka/:id', {
                        templateUrl: 'ng/templates/apytanka-discussion.html',
                        controller: 'apytankaCtrl'
                    }).
                    otherwise({
                        redirectTo: '/'
                    });

            $locationProvider.html5Mode({
                enabled: true,
                requireBase:false
            });
            $locationProvider.hashPrefix('');

        }]);

    app.run(['$rootScope', '$location', 'userService', 'currentUserApi', function( $rootScope, $location, userService, currentUserApi ) {
        $rootScope.$on( "$routeChangeStart", function(event, next, current) {
            if ($rootScope.currentUser == null) {

                currentUserApi.get().$promise.then( function( data ) {
                    if ( data.user ) {
                        userService.setUser( data.user );
                    }
                });
//                    currentUserApi.get().$promise.then(
//                            function(data){
//                                return userService.setUser(data.user);
//                            }
//                    );

            }
            $rootScope.$watch(userService.getUser, function( newVal ){
                $rootScope.currentUser = newVal;
            console.log('reg');
        });
        });
    }]);

    app.controller('editProfileRouteCtrl', ['$scope', '$route', '$routeParams', function($scope, $route, $routeParams){
        var render = function(){

            var renderAction = $route.current.action;

            if(renderAction){
                var renderPath = renderAction.split( "." );
                var about = (renderPath[ 1 ] == "about");
                var apytanki = (renderPath[ 1 ] == "apytanki");
                var settings = (renderPath[ 1 ] == "settings");

                // Store the values in the model.
                $scope.renderAction = renderAction;
                $scope.renderPath = renderPath;
                $scope.currentOn = {'about': about, 'apytanki': apytanki, 'settings': settings};
            }

        };

        $scope.$on("$routeChangeSuccess", function( $currentRoute, $previousRoute ){

            // Update the rendering.
            render();

        });

    }]);

    app.controller('appCtrl', ['$scope','userService', 'sessionApi', function($scope, userService, sessionApi) {

        $scope.logout = function () {
            sessionApi.delete(function () {
                userService.setUser({});
            });
        };

    }]);




})();